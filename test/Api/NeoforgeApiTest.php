<?php
/**
 * NeoforgeApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Kleister
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Kleister OpenAPI
 *
 * API definition for Kleister, manage mod packs for Minecraft
 *
 * The version of the OpenAPI document: 1.0.0-alpha1
 * Contact: kleister@webhippie.de
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Kleister\Test\Api;

use \Kleister\Configuration;
use \Kleister\ApiException;
use \Kleister\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * NeoforgeApiTest Class Doc Comment
 *
 * @category Class
 * @package  Kleister
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class NeoforgeApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for attachNeoforgeToBuild
     *
     * Attach a build to a Neoforge version.
     *
     */
    public function testAttachNeoforgeToBuild()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteNeoforgeFromBuild
     *
     * Unlink a build from a Neoforge version.
     *
     */
    public function testDeleteNeoforgeFromBuild()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listNeoforgeBuilds
     *
     * Fetch the builds attached to a Neoforge version.
     *
     */
    public function testListNeoforgeBuilds()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listNeoforges
     *
     * Fetch the available Neoforge versions.
     *
     */
    public function testListNeoforges()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateNeoforge
     *
     * Update the available Neoforge versions.
     *
     */
    public function testUpdateNeoforge()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
