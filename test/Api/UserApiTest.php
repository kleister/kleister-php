<?php
/**
 * UserApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Kleister
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Kleister OpenAPI
 *
 * API definition for Kleister, manage mod packs for Minecraft
 *
 * The version of the OpenAPI document: 1.0.0-alpha1
 * Contact: kleister@webhippie.de
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Kleister\Test\Api;

use \Kleister\Configuration;
use \Kleister\ApiException;
use \Kleister\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UserApiTest Class Doc Comment
 *
 * @category Class
 * @package  Kleister
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UserApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for attachUserToMod
     *
     * Attach a mod to user.
     *
     */
    public function testAttachUserToMod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attachUserToPack
     *
     * Attach a pack to user.
     *
     */
    public function testAttachUserToPack()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for attachUserToTeam
     *
     * Attach a team to user.
     *
     */
    public function testAttachUserToTeam()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createUser
     *
     * Create a new user.
     *
     */
    public function testCreateUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteUser
     *
     * Delete a specific user.
     *
     */
    public function testDeleteUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteUserFromMod
     *
     * Unlink a mod from user.
     *
     */
    public function testDeleteUserFromMod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteUserFromPack
     *
     * Unlink a pack from user.
     *
     */
    public function testDeleteUserFromPack()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteUserFromTeam
     *
     * Unlink a team from user.
     *
     */
    public function testDeleteUserFromTeam()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUserMods
     *
     * Fetch all mods attached to user.
     *
     */
    public function testListUserMods()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUserPacks
     *
     * Fetch all packs attached to user.
     *
     */
    public function testListUserPacks()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUserTeams
     *
     * Fetch all teams attached to user.
     *
     */
    public function testListUserTeams()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUsers
     *
     * Fetch all available users.
     *
     */
    public function testListUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for permitUserMod
     *
     * Update mod perms for user.
     *
     */
    public function testPermitUserMod()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for permitUserPack
     *
     * Update pack perms for user.
     *
     */
    public function testPermitUserPack()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for permitUserTeam
     *
     * Update team perms for user.
     *
     */
    public function testPermitUserTeam()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for showUser
     *
     * Fetch a specific user.
     *
     */
    public function testShowUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateUser
     *
     * Update a specific user.
     *
     */
    public function testUpdateUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
