# Kleister: SDK for PHP

[![General Workflow](https://github.com/kleister/kleister-php/actions/workflows/general.yml/badge.svg)](https://github.com/kleister/kleister-php/actions/workflows/general.yml) [![Codacy Badge](https://app.codacy.com/project/badge/Grade/c7ce562acf484483b2acf00c00155431)](https://www.codacy.com/gh/kleister/kleister-php/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=kleister/kleister-php&amp;utm_campaign=Badge_Grade) [![Join the Matrix chat at https://matrix.to/#/#kleister:matrix.org](https://img.shields.io/badge/matrix-%23kleister%3Amatrix.org-7bc9a4.svg)](https://matrix.to/#/#kleister:matrix.org) [![PHP Version](https://badge.fury.io/ph/kleister%2Fkleister.svg)](https://badge.fury.io/ph/kleister%2Fkleister)

This repository provides a client SDK for PHP. This SDK is automatically
generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

-   API version: {{appVersion}}
{{#artifactVersion}}
-   Package version: {{artifactVersion}}
{{/artifactVersion}}
{{^hideGenerationTimestamp}}
-   Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
-   Build package: {{generatorClass}}
{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Installation

### Requirements

PHP 7.3 and later, should also work with PHP 8.0 or 8.1 but has not been tested.

### Composer

To install the bindings via [Composer](http://getcomposer.org/), add the
following to `composer.json` and run `composer install` after that:

```json
{
  "repositories": [
    {
      "type": "vcs",
      "url": "https://github.com/{{gitUserId}}/{{gitRepoId}}.git"
    }
  ],
  "require": {
    "{{gitUserId}}/{{packageName}}": "*@dev"
  }
}
```

### Manual

Download the files and include `autoload.php` whereever you need this SDK:

```php
require_once('/path/to/{{packageName}}/vendor/autoload.php');
```

## Tests

To run the unit tests:

```console
composer install
vendor/bin/phpunit
```

## Getting Started

Please follow the [installation](#installation) instructions and then run the
following code:

```php
<?php
require_once(__DIR__ . '/vendor/autoload.php');

{{#apiInfo}}{{#apis}}{{#-first}}{{#operations}}{{#operation}}{{#-first}}
{{> php_doc_auth_partial}}
$apiInstance = new {{invokerPackage}}\Api\{{classname}}(
    // If you want use custom http client, pass your client which implements `GuzzleHttp\ClientInterface`.
    // This is optional, `GuzzleHttp\Client` will be used as default.
    new GuzzleHttp\Client(){{#hasAuthMethods}},
    $config{{/hasAuthMethods}}
);
{{#allParams}}${{paramName}} = {{{example}}}; // {{{dataType}}}{{#description}} | {{{.}}}{{/description}}
{{/allParams}}

try {
    {{#returnType}}$result = {{/returnType}}$apiInstance->{{{operationId}}}({{#allParams}}${{paramName}}{{^-last}}, {{/-last}}{{/allParams}});{{#returnType}}
    print_r($result);{{/returnType}}
} catch (Exception $e) {
    echo 'Exception when calling {{classname}}->{{operationId}}: ', $e->getMessage(), PHP_EOL;
}
{{/-first}}{{/operation}}{{/operations}}{{/-first}}{{/apis}}{{/apiInfo}}
```

## Documentation for endpoints

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}/{{classname}}.md#{{operationIdLowerCase}}) | **{{httpMethod}}** {{path}} | {{summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation for models

{{#models}}{{#model}}-   [{{{classname}}}]({{modelDocPath}}/{{{classname}}}.md){{/model}}
{{/models}}

## Documentation for authorization

{{^authMethods}}
All endpoints do not require authorization.
{{/authMethods}}
{{#authMethods}}
{{#last}} Authentication schemes defined for the API:{{/last}}
### {{{name}}}
{{#isApiKey}}

-   **Type**: API key
-   **API key parameter name**: {{{keyParamName}}}
-   **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}

{{/isApiKey}}
{{#isBasic}}
{{#isBasicBasic}}

-   **Type**: HTTP basic authentication
{{/isBasicBasic}}
{{#isBasicBearer}}

-   **Type**: Bearer authentication{{#bearerFormat}} ({{{.}}}){{/bearerFormat}}
{{/isBasicBearer}}
{{/isBasic}}
{{#isOAuth}}

-   **Type**: `OAuth`
-   **Flow**: `{{{flow}}}`
-   **Authorization URL**: `{{{authorizationUrl}}}`
-   **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}
    -   **{{{scope}}}**: {{{description}}}
{{/scopes}}
{{/isOAuth}}
{{/authMethods}}

## Security

If you find a security issue please contact kleister@webhippie.de first.

## Contributing

Fork -> Patch -> Push -> Pull Request

## Authors

-   [Thomas Boerger](https://github.com/tboerger)

## License

Apache-2.0

## Copyright

```console
Copyright (c) 2018 Thomas Boerger <thomas@webhippie.de>
```
